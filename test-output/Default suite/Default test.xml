<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="asus" name="Default test" tests="6" failures="0" timestamp="11 Sep 2018 05:03:49 GMT" time="0.62" errors="0">
  <testcase name="@BeforeClass runDriver" time="0.0" classname="Tests.NewCustomerTest">
    <failure type="java.lang.IllegalStateException" message="The driver executable does not exist: D:\selenium_workplace\bank\chromedriver.exe">
      <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: D:\selenium_workplace\bank\chromedriver.exe
	at com.google.common.base.Preconditions.checkState(Preconditions.java:534)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:136)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:131)
	at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:32)
	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:137)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:329)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:88)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:124)
	at DriverInstance.BaseClass.runDriver(BaseClass.java:31)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:564)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:213)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:175)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:107)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeClass runDriver -->
  <testcase name="@AfterClass close" time="0.0" classname="Tests.NewCustomerTest">
    <skipped/>
  </testcase> <!-- @AfterClass close -->
  <testcase name="@BeforeClass runDriver" time="0.0" classname="Tests.LoginTest">
    <skipped/>
  </testcase> <!-- @BeforeClass runDriver -->
  <testcase name="@BeforeClass setup" time="0.0" classname="Tests.LoginTest">
    <skipped/>
  </testcase> <!-- @BeforeClass setup -->
  <testcase name="@AfterClass close" time="0.0" classname="Tests.LoginTest">
    <skipped/>
  </testcase> <!-- @AfterClass close -->
  <testcase name="@BeforeClass runDriver" time="0.0" classname="Tests.DepositTest">
    <skipped/>
  </testcase> <!-- @BeforeClass runDriver -->
  <testcase name="@AfterClass close" time="0.0" classname="Tests.DepositTest">
    <skipped/>
  </testcase> <!-- @AfterClass close -->
  <testcase name="successfulCustomerAdd" time="0.449" classname="Tests.NewCustomerTest">
    <skipped/>
  </testcase> <!-- successfulCustomerAdd -->
  <testcase name="invalidUsernamePassword" time="0.01" classname="Tests.LoginTest">
    <skipped/>
  </testcase> <!-- invalidUsernamePassword -->
  <testcase name="invalidUsernameValidPassword" time="0.002" classname="Tests.LoginTest">
    <skipped/>
  </testcase> <!-- invalidUsernameValidPassword -->
  <testcase name="validUsernameInvalidPassword" time="0.002" classname="Tests.LoginTest">
    <skipped/>
  </testcase> <!-- validUsernameInvalidPassword -->
  <testcase name="validUsernamePassword" time="0.002" classname="Tests.LoginTest">
    <skipped/>
  </testcase> <!-- validUsernamePassword -->
  <testcase name="successfulDeposit" time="0.003" classname="Tests.DepositTest">
    <skipped/>
  </testcase> <!-- successfulDeposit -->
</testsuite> <!-- Default test -->
